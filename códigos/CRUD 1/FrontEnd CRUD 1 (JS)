// Variável para armazenar o usuário em edição
let userToEdit = null;

// Função para exibir páginas específicas do dashboard
function showPage(pageId) {
    const pages = document.querySelectorAll('.page');
    pages.forEach(page => {
        page.classList.remove('visible');
        page.classList.add('hidden');
    });

    const pageToShow = document.getElementById(pageId);
    if (pageToShow) {
        pageToShow.classList.remove('hidden');
        pageToShow.classList.add('visible');
    }
}

// Exibir a página inicial (Home) ao carregar
window.onload = () => {
    showPage('home');
};

// Função para manipular o formulário de cadastro
document.getElementById('userForm').addEventListener('submit', function(event) {
    event.preventDefault();

    const nome = document.getElementById('nome').value;
    const cpf = document.getElementById('cpf').value;
    const email = document.getElementById('email').value;
    const telefone = document.getElementById('telefone').value;
    const endereco = document.getElementById('endereco').value;
    const senha = document.getElementById('senha').value;

    // Se estamos editando um usuário, atualiza os dados
    if (userToEdit) {
        userToEdit.cells[0].innerText = nome;
        userToEdit.cells[1].innerText = cpf;
        userToEdit.cells[2].innerText = email;
        userToEdit.cells[3].innerText = telefone;
        userToEdit.cells[4].innerText = endereco;

        // Resetando a variável de edição
        userToEdit = null;
    } else {
        // Caso contrário, cria uma nova linha na tabela
        const tableBody = document.getElementById('userTable').getElementsByTagName('tbody')[0];

        const row = document.createElement('tr');
        row.innerHTML = `
            <td>${nome}</td>
            <td>${cpf}</td>
            <td>${email}</td>
            <td>${telefone}</td>
            <td>${endereco}</td>
            <td>
                <button class="edit">Editar</button>
                <button class="delete">Excluir</button>
            </td>
        `;
        tableBody.appendChild(row);

        // Exibe a mensagem de sucesso
        const successMessage = document.getElementById('successMessage');
        successMessage.classList.remove('hidden');
        
        // Remove a mensagem de sucesso após 3 segundos
        setTimeout(() => {
            successMessage.classList.add('hidden');
        }, 3000);
    }

    // Limpar o formulário após o cadastro
    document.getElementById('userForm').reset();

});

// Função de interação com a tabela de usuários (editar/excluir)
document.getElementById('userTable').addEventListener('click', function(event) {
    const td = event.target;

    if (td.classList.contains('edit')) {
        const row = td.closest('tr');
        const nome = row.cells[0].innerText;
        const cpf = row.cells[1].innerText;
        const email = row.cells[2].innerText;
        const telefone = row.cells[3].innerText;
        const endereco = row.cells[4].innerText;

        // Preenche o formulário de cadastro com os dados do usuário
        document.getElementById('nome').value = nome;
        document.getElementById('cpf').value = cpf;
        document.getElementById('email').value = email;
        document.getElementById('telefone').value = telefone;
        document.getElementById('endereco').value = endereco;

        // Define que estamos editando esse usuário
        userToEdit = row;

        // Muda para a página de cadastro
        showPage('cadastrar');
    }

    if (td.classList.contains('delete')) {
        const row = td.closest('tr');
        const nome = row.cells[0].innerText;

        if (confirm(`Deseja excluir o usuário ${nome}?`)) {
            // Remove a linha da tabela
            row.remove();
        }
    }
});
